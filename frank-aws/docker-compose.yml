# ================================================================
# docker-compose.aws.yml
# FrankStack - AWS Simulation (LocalStack + AWS Microservices)
# Structure: API Gateway + Service (PaymentCard) + Lambda (Producer/Consumer)
# Optimized: using .env.aws file for configuration
#
# Author: Edoardo Sabatini
# Date: 27 October 2025
# ================================================================

version: '3.9'

#############################################################
#  NOTICE:
#  
# Explanation of the modification:
# DATA_DIR=/var/localstack/data: sets the folder where LocalStack will save its data.
# frank-aws_localstack_data:/var/localstack: mounts a dedicated Docker volume inside the container at /var/localstack.
# This way, LocalStack will no longer attempt to execute rm -rf "/tmp/localstack" and the dedicated volume
# is mounted in a directory that avoids conflicts on container startup.
#  
#############################################################

services:
  # ----------------------------
  # FrankStack LocalStack (AWS Mock)
  # ----------------------------
  frankstack-localstack:
    image: localstack/localstack:latest
    container_name: frankstack-localstack
    ports:
      - "${LOCALSTACK_PORT}:4566"
      - "${LOCALSTACK_LEGACY_PORT}:4571"
    environment:
      - SERVICES=${LOCALSTACK_SERVICES}
      - DEBUG=${LOCALSTACK_DEBUG}
      - DATA_DIR=${LOCALSTACK_DATA_DIR}
      - LAMBDA_EXECUTOR=${LOCALSTACK_LAMBDA_EXECUTOR}
      - LAMBDA_REMOVE_CONTAINERS=${LOCALSTACK_LAMBDA_REMOVE_CONTAINERS}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - frank-aws_localstack_data:/var/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - frankstack-aws-net

  # ----------------------------
  # FrankStack AWS API Gateway
  # ----------------------------
  frankstack-aws-api-gateway:
    build:
      context: ./frank-aws-api-gateway
      dockerfile: Dockerfile
    container_name: frankstack-aws-api-gateway
    depends_on:
      - frankstack-localstack
    ports:
      - "${AWS_API_GATEWAY_PORT}:18081"
    environment:
      - SPRING_PROFILES_ACTIVE=${AWS_API_GATEWAY_PROFILE}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - maven-repo:/root/.m2
    networks:
      - frankstack-aws-net

# ------------------------------------------------------------------------------------
# AWS Service microservices
# ------------------------------------------------------------------------------------

  # ----------------------------
  # Payment Card Service
  # ----------------------------
  frankstack-aws-service-payment-card:
    build:
      context: ./frank-aws-service/frank-aws-service-payment-card
      dockerfile: Dockerfile
    container_name: frankstack-aws-service-payment-card
    depends_on:
      - frankstack-localstack
      - frankstack-aws-api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=${AWS_SERVICE_PROFILE}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ENDPOINT=${AWS_ENDPOINT}
      - AWS_LAMBDA_NAME=${AWS_LAMBDA_NAME}
    volumes:
      - maven-repo:/root/.m2
    networks:
      - frankstack-aws-net
      
# ------------------------------------------------------------------------------------
# Networks and Volumes
# ------------------------------------------------------------------------------------
networks:
  frankstack-aws-net:
    driver: bridge

volumes:
  maven-repo: {}
  frank-aws_localstack_data: {}
  